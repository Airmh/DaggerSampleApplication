// Generated by Dagger (https://google.github.io/dagger).
package com.airmh.anakin.daggertest.test4.di;

import android.support.v4.app.FragmentManager;
import com.airmh.daggersample.test4.Test4Activity;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class Test4ActivityModule_FragmentManagerFactory implements Factory<FragmentManager> {
  private final Test4ActivityModule module;

  private final Provider<Test4Activity> activityProvider;

  public Test4ActivityModule_FragmentManagerFactory(
      Test4ActivityModule module, Provider<Test4Activity> activityProvider) {
    this.module = module;
    this.activityProvider = activityProvider;
  }

  @Override
  public FragmentManager get() {
    return provideInstance(module, activityProvider);
  }

  public static FragmentManager provideInstance(
      Test4ActivityModule module, Provider<Test4Activity> activityProvider) {
    return proxyFragmentManager(module, activityProvider.get());
  }

  public static Test4ActivityModule_FragmentManagerFactory create(
      Test4ActivityModule module, Provider<Test4Activity> activityProvider) {
    return new Test4ActivityModule_FragmentManagerFactory(module, activityProvider);
  }

  public static FragmentManager proxyFragmentManager(
      Test4ActivityModule instance, Test4Activity activity) {
    return Preconditions.checkNotNull(
        instance.fragmentManager(activity),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
