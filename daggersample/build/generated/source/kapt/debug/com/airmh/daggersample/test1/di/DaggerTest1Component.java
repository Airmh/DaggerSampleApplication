// Generated by Dagger (https://google.github.io/dagger).
package com.airmh.daggersample.test1.di;

import com.airmh.daggersample.test1.Test1Activity;
import com.airmh.daggersample.test1.Test1Activity_MembersInjector;
import dagger.internal.Preconditions;

public final class DaggerTest1Component implements Test1Component {
  private Test1Module test1Module;

  private DaggerTest1Component(Builder builder) {
    this.test1Module = builder.test1Module;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static Test1Component create() {
    return new Builder().build();
  }

  @Override
  public void inject(Test1Activity test1Activity) {
    injectTest1Activity(test1Activity);
  }

  private Test1Activity injectTest1Activity(Test1Activity instance) {
    Test1Activity_MembersInjector.injectTest1InjectClass(
        instance, Test1Module_CreateTestClassFactory.proxyCreateTestClass(test1Module));
    return instance;
  }

  public static final class Builder {
    private Test1Module test1Module;

    private Builder() {}

    public Test1Component build() {
      if (test1Module == null) {
        this.test1Module = new Test1Module();
      }
      return new DaggerTest1Component(this);
    }

    public Builder test1Module(Test1Module test1Module) {
      this.test1Module = Preconditions.checkNotNull(test1Module);
      return this;
    }
  }
}
