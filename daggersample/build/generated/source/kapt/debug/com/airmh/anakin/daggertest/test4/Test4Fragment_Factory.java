// Generated by Dagger (https://google.github.io/dagger).
package com.airmh.anakin.daggertest.test4;

import android.support.v4.app.Fragment;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class Test4Fragment_Factory implements Factory<Test4Fragment> {
  private final Provider<DispatchingAndroidInjector<Fragment>> childFragmentInjectorProvider;

  private final Provider<Test4InjectClass> test4InjectClassProvider;

  public Test4Fragment_Factory(
      Provider<DispatchingAndroidInjector<Fragment>> childFragmentInjectorProvider,
      Provider<Test4InjectClass> test4InjectClassProvider) {
    this.childFragmentInjectorProvider = childFragmentInjectorProvider;
    this.test4InjectClassProvider = test4InjectClassProvider;
  }

  @Override
  public Test4Fragment get() {
    return provideInstance(childFragmentInjectorProvider, test4InjectClassProvider);
  }

  public static Test4Fragment provideInstance(
      Provider<DispatchingAndroidInjector<Fragment>> childFragmentInjectorProvider,
      Provider<Test4InjectClass> test4InjectClassProvider) {
    Test4Fragment instance = new Test4Fragment();
    DaggerFragment_MembersInjector.injectChildFragmentInjector(
        instance, childFragmentInjectorProvider.get());
    Test4Fragment_MembersInjector.injectTest4InjectClass(instance, test4InjectClassProvider.get());
    return instance;
  }

  public static Test4Fragment_Factory create(
      Provider<DispatchingAndroidInjector<Fragment>> childFragmentInjectorProvider,
      Provider<Test4InjectClass> test4InjectClassProvider) {
    return new Test4Fragment_Factory(childFragmentInjectorProvider, test4InjectClassProvider);
  }

  public static Test4Fragment newTest4Fragment() {
    return new Test4Fragment();
  }
}
